!function(){"use strict";function e(e,t,r,o,s){var n=this;n.sidebar=!1,n.post={author_id:r.user().id,status:2,tags:[]},n.editor={activeStatus:[],codemirror:{mode:"markdown",tabMode:"indent",lineWrapping:!0},counter:0,status:[{"class":"danger",group:1,status:1,text:"Publish Now"},{"class":"primary",group:1,status:2,text:"Save as Draft"},{"class":"danger",group:2,status:2,text:"Unpublish Post"},{"class":"info",group:2,status:1,text:"Update Post"}],tags:[]},n.wordCounter=function(){return n.editor.counter>0?n.editor.counter+" words":"0 words"},n.initialize=function(){n.editor.activeStatus=n.editor.status[1],t.postId&&o.getPost(t.postId).success(function(e){e.post&&(n.post=e.post,1==e.post.status&&(n.editor.activeStatus=n.editor.status[3]))}).error(function(e){})},n.savePost=function(){var t=n.post;o.save(t).success(function(t){var r=t.post;return n.post.id?(1==r.status&&(n.editor.activeStatus=n.editor.status[3]),2==r.status&&(n.editor.activeStatus=n.editor.status[1]),s.growl('You have successfully updated "'+r.title+'".',"success"),void(n.post=r)):(s.growl('You have successfully created the post "'+r.title+'".',"success"),void e.go("postEditor",{postId:r.id}))}).error(function(e){})},n.setPostStatus=function(e){n.editor.activeStatus=e,n.post.status=e.status},n.toggleSidebar=function(){n.sidebar=!n.sidebar},n.initialize()}angular.module("journal.component.editor").controller("EditorController",["$state","$stateParams","AuthService","EditorService","GrowlService",e])}(),function(){"use strict";function e(e,t){var r=this;r.user=t.user(),r.logout=function(){t.logout(),e.go("login")}}angular.module("journal.component.header").controller("HeaderController",["$state","AuthService",e])}(),function(){"use strict";function e(e){var t=this;e.$on("installer-menu",function(e,r){t.active=r||1})}angular.module("journal.component.installer").controller("InstallerController",["$rootScope",e])}(),function(){"use strict";function e(e,t,r,o,s){e.$broadcast("installer-menu",2);var n=this;n.account=[],n.errors=[],n.createAccount=function(){s.createAccount(n.account).success(function(e){e.token&&(r.login(e.user),r.setToken(e.token),t.go("installer.success"))}).error(function(e){o.growl("There are some errors encountered.","error"),e.errors&&(n.errors=e.errors)})}}angular.module("journal.component.installerDetails").controller("InstallerDetailsController",["$rootScope","$state","AuthService","GrowlService","InstallerDetailsService",e])}(),function(){"use strict";function e(e){e.$broadcast("installer-menu",1)}angular.module("journal.component.installerStart").controller("InstallerStartController",["$rootScope","$state","AuthService","GrowlService",e])}(),function(){"use strict";function e(e,t,r,o){e.$broadcast("installer-menu",3);var s=this;s.initialize=function(){return r.user()||r.getToken()?void 0:(o.growl("Hey, something went wrong. Can you repeat again?","error"),void t.go("installer.start"))},s.go=function(){t.go("post.lists")},s.initialize()}angular.module("journal.component.installerSuccess").controller("InstallerSuccessController",["$rootScope","$state","AuthService","GrowlService",e])}(),function(){"use strict";function e(e,t,r,o){var s=this;s.login=[],s.authenticate=function(){var n=s.login;o.authenticate(n.email,n.password).success(function(o){return o.user&&o.token?(t.login(o.user),t.setToken(o.token),r.growl("Welcome, "+o.user.name,"success"),void e.go("post.lists")):void 0}).error(function(e){var t=e.errors.message;r.growl(t,"error")})}}angular.module("journal.component.login").controller("LoginController",["$state","AuthService","GrowlService","LoginService",e])}(),function(){"use strict";function e(e){var t=this;t.posts=[],t.activePost=null,t.initialize=function(){e.getPosts().success(function(e){e.posts&&(t.posts=e.posts,t.activePost=e.posts[0])})},t.previewThisPost=function(e){t.activePost=e},t.initialize()}angular.module("journal.component.postLists").controller("PostListsController",["PostListService",e])}(),function(){"use strict";function e(e,t,r){var o=this;o.settings=[],o.initialize=function(){r.getSettings("title,description,post_per_page,cover_url,logo_url").success(function(e){e.settings&&(o.settings=e.settings)})},o.saveSettings=function(){r.saveSettings(o.settings).success(function(e){e.settings&&t.growl("You have successfully updated the settings.","success")})},o.showImageUploader=function(t){var r=e.open({animation:!0,templateUrl:"/assets/templates/uploader-modal/uploader-modal.html",controller:"SettingsModalController",resolve:{settings:function(){return o.settings},type:function(){return t}}});r.result.then(function(e){o.settings=e})},o.initialize()}angular.module("journal.component.settings").controller("SettingsController",["$modal","GrowlService","SettingsService",e])}(),function(){"use strict";function e(e,t,r,o,s,n,i){e.activeOption="file",e.imageUrl=null,e.image={link:null,file:null},e.settings=n,e.upload={active:!1,percentage:0},e.$watch("image.file",function(){null!=e.image.file&&s.upload(e.image.file).progress(function(t){e.upload={active:!0,percentage:parseInt(100*t.loaded/t.total)}}).success(function(t){t.url&&(e.imageUrl=t.url,e.upload={active:!1,percentage:0})}).error(function(){r.growl("Something went wrong with the upload. Please try again later.","error"),e.upload={active:!1,percentage:0}})}),e.closeModal=function(){t.dismiss("cancel")},e.initialize=function(){"cover_url"==i&&e.settings.cover_url&&(e.imageUrl=e.settings.cover_url),"logo_url"==i&&e.settings.logo_url&&(e.imageUrl=e.settings.logo_url)},e.removeImage=function(){e.imageUrl=null,e.settings[i]=null},e.save=function(){e.settings[i]=e.imageUrl?e.imageUrl:e.image.link,o.saveSettings(e.settings).success(function(e){e.settings&&(r.growl("You have successfully updated the settings.","success"),t.close(e.settings))})},e.switchOption=function(){switch(e.activeOption){case"link":e.activeOption="file";break;case"file":e.activeOption="link";break;default:e.activeOption="file"}},e.initialize()}angular.module("journal.component.settingsModal").controller("SettingsModalController",["$scope","$modalInstance","GrowlService","SettingsService","FileUploaderService","settings","type",e])}(),function(){"use strict";function e(e,t){var r=this;r.user=[],r.errors=[],r.createUser=function(){r.errors=[],t.createUser(r.user).success(function(t){t.user&&(r.user=[],e.growl("You have successfully added "+t.user.name,"success"))}).error(function(t){if(t.errors){e.growl("There are errors encountered.","error"),r.errors=t.errors;for(var o in t.errors)e.growl(t.errors[o][0],"error")}})}}angular.module("journal.component.userCreate").controller("UserCreateController",["GrowlService","UserCreateService",e])}(),function(){"use strict";function e(e,t){var r=this;r.users=[],r.initialize=function(){e.getAllUsers().success(function(e){e.users&&(r.users=e.users)}).error(function(){})},r.setUserAvatarImage=function(e){return e.avatar_url?e.avatar_url:t.DEFAULT_AVATAR_URL},r.initialize()}angular.module("journal.component.userLists").controller("UserListsController",["UserListsService","CONFIG",e])}(),function(){"use strict";function e(e,t,r,o,s,n){var i=this;i.current=!1,i.user=[],i.initialize=function(){!t.userId,s.getUser(t.userId).success(function(e){e.user&&(i.current=r.user().id==e.user.id,i.user=e.user)}).error(function(e,t){})},i.setImage=function(e){var t=null;switch(e){case"cover_url":t=i.user.cover_url?i.user.cover_url:n.DEFAULT_COVER_URL;break;case"avatar_url":t=i.user.avatar_url?i.user.avatar_url:n.DEFAULT_AVATAR_URL}return"background-image: url('"+t+"')"},i.showImageUploader=function(t){if(i.current){var r=e.open({animation:!0,templateUrl:"/assets/templates/uploader-modal/uploader-modal.html",controller:"UserProfileModalController",resolve:{user:function(){return i.user},type:function(){return t}}});r.result.then(function(e){i.user=e})}},i.updateProfile=function(){var e=i.user;s.updateUserDetails(e).success(function(e){e.user&&o.growl("You have successfully updated your profile.","success")}).error(function(e){})},i.initialize()}angular.module("journal.component.userProfile").controller("UserProfileController",["$modal","$stateParams","AuthService","GrowlService","UserProfileService","CONFIG",e])}(),function(){"use strict";function e(e,t,r,o,s,n,i){e.activeOption="file",e.imageUrl=null,e.image={link:null,file:null},e.user=n,e.upload={active:!1,percentage:0},e.$watch("image.file",function(){null!=e.image.file&&s.upload(e.image.file).progress(function(t){e.upload={active:!0,percentage:parseInt(100*t.loaded/t.total)}}).success(function(t){t.url&&(e.imageUrl=t.url,e.upload={active:!1,percentage:0})}).error(function(){r.growl("Something went wrong with the upload. Please try again later.","error"),e.upload={active:!1,percentage:0}})}),e.closeModal=function(){t.dismiss("cancel")},e.initialize=function(){"cover_url"==i&&e.user.cover_url&&(e.imageUrl=e.user.cover_url),"avatar_url"==i&&e.user.avatar_url&&(e.imageUrl=e.user.avatar_url)},e.removeImage=function(){e.imageUrl=null,e.settings[i]=null},e.save=function(){e.user[i]=e.imageUrl?e.imageUrl:e.image.link,o.updateUserDetails(e.user).success(function(e){e.user&&(r.growl("You have successfully updated your profile.","success"),t.close(e.user))}).error(function(e){})},e.switchOption=function(){switch(e.activeOption){case"link":e.activeOption="file";break;case"file":e.activeOption="link";break;default:e.activeOption="file"}},e.initialize()}angular.module("journal.component.userProfileModal").controller("UserProfileModalController",["$scope","$modalInstance","GrowlService","UserProfileService","FileUploaderService","user","type",e])}();